FROM ruby:2.7.2

ARG OSM_DST=/opt/osm

ARG PG_HOST
ARG OSM_USER
ARG OSM_PASSWORD
ARG OSM_DB
ARG PG_ADMIN_USER
ARG PG_ADMIN_PASSWORD

# default posm user info
ARG osm_posm_user="POSM"
ARG osm_posm_description="Portable OpenStreetMap"
ARG osm_posm_password=awesomeposm
# base URL for iD app definition
ARG osm_fqdn=localhost
ARG osm_base_url="http://${osm_fqdn}"

WORKDIR /opt/osm

RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \
    echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list 

# firefox-geckodriver equivalent needed?
RUN apt update && \
    apt install --no-install-recommends -y \
        libmagickwand-dev \
        libxml2-dev \
        libxslt1-dev \
        nodejs \
        npm \
        yarn \
        apache2 \
        apache2-dev \
        build-essential \
        git-core \
        postgresql-contrib \
        postgresql-server-dev-all \
        libpq-dev \
        libsasl2-dev \
        imagemagick \
        libffi-dev \
        libgd-dev \
        libarchive-dev \
        libbz2-dev \
        jq

# Needed by something in 'rake db:create'
# TODO I get the following weird error when I build this image - need to check nodejs and npm versions installed above:
#   npm WARN npm npm does not support Node.js v10.21.0
#   npm WARN npm You should probably upgrade to a newer version of node as we
#   npm WARN npm can't make any promises that npm will work with this version.
#   npm WARN npm Supported releases of Node.js are the latest release of 4, 6, 7, 8, 9.
#   npm WARN npm You can find the latest version at https://nodejs.org/
RUN npm install -g svgo

# The current ARC openstreetmap-website is made for a really old version of Ruby and has a ton of dependency version issues
# in Gemfile.lock, so as a test we're going to use the official OpenStreetMap version.
# RUN git clone --depth=1 https://github.com/AmericanRedCross/openstreetmap-website $OSM_DST/osm-web 
RUN git clone --depth=1 https://github.com/openstreetmap/openstreetmap-website $OSM_DST/osm-web 

RUN cd $OSM_DST/osm-web && \
    bundle install && \
    bundle exec rake yarn:install && \
    touch config/settings.local.yml && \
    cp config/example.storage.yml config/storage.yml

# Add our config/database.yml, which has the appropriate user/pass/host set.
# TODO Generate this dynamically in build_posm.sh
ADD osm/config/database.yml $OSM_DST/osm-web/config/database.yml 
ADD osm/config/initializers/action_mailer.rb $OSM_DST/osm-web/config/initializers/action_mailer.rb
ADD osm/lib/tasks/osm.rake $OSM_DST/osm-web/lib/tasks/osm.rake

# Create an OSM user.  The username must match what's in the Rails 'database.yml'. 
RUN PGPASSWORD=$PG_ADMIN_PASSWORD psql -h $PG_HOST -U $PG_ADMIN_USER -c "CREATE ROLE $OSM_USER WITH SUPERUSER PASSWORD '$OSM_PASSWORD' LOGIN;"

# IMPORTANT The following two environment variables are required by 'rake db:create' and 'rake db:migrate'.  Setting RAILS_ENV to 'production' creates only the
# production database (not dev or test); setting DISABLE_DATABASE_ENVIRONMENT_CHECK to '1' allows db:migrate to do its thing against a production database
# without complaining.
ENV RAILS_ENV production
ENV DISABLE_DATABASE_ENVIRONMENT_CHECK 1

RUN  cd $OSM_DST/osm-web && \
     bundle exec rake db:create

# Load the Postgres btree-gist extension and install the OSM special functions.  Note that there's also a compiled library version; see
# https://github.com/openstreetmap/openstreetmap-website/blob/master/INSTALL.md section entitled 
# 'Installing compiled shared library database functions (optional)' for details.  This is especially
# recommended if applications make a lot of OSM '/changes' API calls (see https://github.com/openstreetmap/openstreetmap-website/blob/master/CONFIGURE.md)
RUN PGPASSWORD=$OSM_PASSWORD psql -h $PG_HOST -U $OSM_USER -d $OSM_DB -c "CREATE EXTENSION postgis" && \
    PGPASSWORD=$OSM_PASSWORD psql -h $PG_HOST -U $OSM_USER -d $OSM_DB -c "CREATE EXTENSION hstore" && \
    PGPASSWORD=$OSM_PASSWORD psql -h $PG_HOST -U $OSM_USER -d $OSM_DB -c "CREATE EXTENSION btree_gist" && \
    PGPASSWORD=$OSM_PASSWORD psql -h $PG_HOST -U $OSM_USER -d $OSM_DB -f $OSM_DST/osm-web/db/functions/functions.sql

RUN cd $OSM_DST/osm-web && \
    bundle exec rake db:migrate 

# Required because we're running in production mode?  This step takes a while...
# See https://github.com/openstreetmap/openstreetmap-website/issues/2016
RUN cd $OSM_DST/osm-web && \
    bundle exec rake i18n:js:export && \
    bundle exec rake assets:precompile && \
    export osm_id_key=$(bundle exec rake osm:apps:create name="OSM iD" url="${osm_base_url}" | jq -r .key) && \
    bundle exec rake osm:users:create display_name="${osm_posm_user}" description="${osm_posm_description}" password="${osm_posm_password}"

# Set up the command that will run when the container is started.
ADD osm/run_osm.sh /
RUN chmod u+x /run_osm.sh

# TODO https://github.com/openstreetmap/openstreetmap-website/blob/master/CONFIGURE.md recommends using the
# Phusion Passenger server instead of Rails in production.
CMD ["sh", "-c", "/run_osm.sh"]

EXPOSE 3000